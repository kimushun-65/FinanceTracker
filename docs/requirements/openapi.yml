openapi: 3.0.3
info:
  title: FinSight API
  description: 家計簿アプリケーション「FinSight」のREST API仕様書
  version: 1.0.0
  contact:
    name: FinSight Team
    email: support@finsight.com
servers:
  - url: https://api.finsight.com/v1
    description: Production server
  - url: http://localhost:8080/v1
    description: Development server

security:
  - BearerAuth: []

paths:
  # 認証API
  /auth/callback:
    post:
      tags:
        - Authentication
      summary: Auth0コールバック処理
      description: Google認証後のコールバック処理。ユーザー情報の同期を行います。
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth0CallbackRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth0CallbackResponse'

  /auth/sync:
    post:
      tags:
        - Authentication
      summary: ユーザー同期
      description: Auth0のユーザー情報をシステムに同期します
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSyncResponse'

  # ユーザー管理API
  /users/me:
    get:
      tags:
        - Users
      summary: ユーザープロファイル取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Users
      summary: ユーザープロファイル更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'


  # 口座管理API
  /accounts:
    get:
      tags:
        - Accounts
      summary: 口座一覧取得
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
    post:
      tags:
        - Accounts
      summary: 口座作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /accounts/{accountId}:
    put:
      tags:
        - Accounts
      summary: 口座更新
      parameters:
        - $ref: '#/components/parameters/AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - Accounts
      summary: 口座削除
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        '204':
          description: 削除成功

  /accounts/{accountId}/movements:
    post:
      tags:
        - Accounts
      summary: 口座残高更新
      parameters:
        - $ref: '#/components/parameters/AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountMovementCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMovement'

  # カテゴリ管理API
  /categories/master:
    get:
      tags:
        - Categories
      summary: カテゴリマスター一覧取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryMasterListResponse'
    post:
      tags:
        - Categories
      summary: カテゴリマスター作成
      security:
        - BearerAuth: ['admin:all']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryMasterCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryMaster'

  /categories/master/{masterCategoryId}:
    put:
      tags:
        - Categories
      summary: カテゴリマスター更新
      security:
        - BearerAuth: ['admin:all']
      parameters:
        - $ref: '#/components/parameters/MasterCategoryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryMasterUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryMaster'
    delete:
      tags:
        - Categories
      summary: カテゴリマスター削除（非活性化）
      security:
        - BearerAuth: ['admin:all']
      parameters:
        - $ref: '#/components/parameters/MasterCategoryId'
      responses:
        '200':
          description: 非活性化成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryMasterDeleteResponse'

  /categories:
    get:
      tags:
        - Categories
      summary: ユーザーカテゴリ一覧取得
      description: アクティブなカテゴリのみを取得します（is_active=trueのカテゴリのみ）
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'

  /categories/{categoryId}:
    put:
      tags:
        - Categories
      summary: カテゴリ更新
      parameters:
        - $ref: '#/components/parameters/CategoryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - Categories
      summary: カテゴリ削除（非活性化）
      parameters:
        - $ref: '#/components/parameters/CategoryId'
      responses:
        '200':
          description: 非活性化成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDeleteResponse'

  # 取引管理API
  /transactions:
    get:
      tags:
        - Transactions
      summary: 取引一覧取得
      parameters:
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: type
          in: query
          schema:
            type: string
            enum: [income, expense]
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
        - name: account_id
          in: query
          schema:
            type: string
            format: uuid
        - name: min_amount
          in: query
          schema:
            type: integer
        - name: max_amount
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionListResponse'
    post:
      tags:
        - Transactions
      summary: 取引作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /transactions/{transactionId}:
    put:
      tags:
        - Transactions
      summary: 取引更新
      parameters:
        - $ref: '#/components/parameters/TransactionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      tags:
        - Transactions
      summary: 取引削除
      parameters:
        - $ref: '#/components/parameters/TransactionId'
      responses:
        '204':
          description: 削除成功

  /transactions/summary:
    get:
      tags:
        - Transactions
      summary: 取引サマリー取得
      description: 指定期間の取引サマリーとカテゴリ別集計を取得します
      parameters:
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - name: category_id
          in: query
          description: カテゴリIDでフィルタ
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          description: 取引タイプでフィルタ
          schema:
            type: string
            enum: [income, expense]
        - name: group_by
          in: query
          description: グループ化の単位
          schema:
            type: string
            enum: [category, date, month]
            default: category
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSummaryResponse'

  /transactions/summary/monthly:
    get:
      tags:
        - Transactions
      summary: 月次サマリー取得
      description: 月間サマリー取得（上部カード表示用）。収入・支出・純収入の計算結果を返します
      parameters:
        - name: year
          in: query
          description: 年（指定なしの場合は現在年）
          schema:
            type: integer
            example: 2024
        - name: month
          in: query
          description: 月（指定なしの場合は現在月）
          schema:
            type: integer
            minimum: 1
            maximum: 12
            example: 2
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionMonthlySummaryResponse'


  # 予算管理API
  /budgets:
    get:
      tags:
        - Budgets
      summary: 予算一覧取得
      parameters:
        - name: year
          in: query
          schema:
            type: integer
        - name: month
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetListResponse'
    post:
      tags:
        - Budgets
      summary: 予算設定
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetCreateResponse'

  /budgets/current:
    get:
      tags:
        - Budgets
      summary: 今月の予算取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentBudgetResponse'

  /budgets/{budgetId}:
    put:
      tags:
        - Budgets
      summary: 予算更新
      parameters:
        - $ref: '#/components/parameters/BudgetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetUpdateRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'


  # AI予算提案API
  /budget-suggestions:
    get:
      tags:
        - Budget Suggestions
      summary: 予算提案取得
      parameters:
        - name: month
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
            example: '2024-02'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetSuggestionResponse'

  /budget-suggestions/generate:
    post:
      tags:
        - Budget Suggestions
      summary: 予算提案生成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetSuggestionGenerateRequest'
      responses:
        '201':
          description: 生成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetSuggestionGenerateResponse'

  /budget-suggestions/{suggestionId}/accept:
    put:
      tags:
        - Budget Suggestions
      summary: 予算提案承認
      parameters:
        - $ref: '#/components/parameters/SuggestionId'
      responses:
        '200':
          description: 承認成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetSuggestionStatusResponse'

  /budget-suggestions/{suggestionId}/reject:
    put:
      tags:
        - Budget Suggestions
      summary: 予算提案却下
      parameters:
        - $ref: '#/components/parameters/SuggestionId'
      responses:
        '200':
          description: 却下成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetSuggestionStatusResponse'

  # サマリーAPI
  /summary/monthly:
    get:
      tags:
        - Summary
      summary: 月次サマリー取得
      description: 指定期間の月次サマリーを取得します。期間と集計単位を指定できます。
      parameters:
        - name: period
          in: query
          description: 期間指定（YYYY-MM形式）
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
            example: '2024-02'
        - name: granularity
          in: query
          description: 集計の粒度
          schema:
            type: string
            enum: [daily, weekly, monthly]
            default: daily
        - name: include_comparison
          in: query
          description: 前月比較を含むかどうか
          schema:
            type: boolean
            default: true
        - name: category_breakdown
          in: query
          description: カテゴリ別内訳を含むかどうか
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySummaryResponse'

  # 資産管理API
  /assets/snapshots:
    get:
      tags:
        - Assets
      summary: 資産スナップショット取得
      parameters:
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/To'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetSnapshotListResponse'

  # 資産予測API
  /assets/forecasts/latest:
    get:
      tags:
        - Asset Forecasts
      summary: 資産予測取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetForecastResponse'

  /assets/forecasts:
    post:
      tags:
        - Asset Forecasts
      summary: 資産予測作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetForecastCreateRequest'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetForecastCreateResponse'

  # レポートAPI

  /reports/email:
    post:
      tags:
        - Reports
      summary: レポートメール送信
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportEmailRequest'
      responses:
        '200':
          description: メール送信成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportEmailResponse'

  # 通知設定API
  /notifications/settings:
    get:
      tags:
        - Notifications
      summary: 通知設定取得
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettings'
    put:
      tags:
        - Notifications
      summary: 通知設定更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsUpdateRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSettingsUpdateResponse'



components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Page:
      name: page
      in: query
      description: ページ番号（1から開始）
      schema:
        type: integer
        minimum: 1
        default: 1
    Limit:
      name: limit
      in: query
      description: 1ページあたりの件数
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    Sort:
      name: sort
      in: query
      description: ソート順（-で降順）
      schema:
        type: string
        default: '-created_at'
    From:
      name: from
      in: query
      description: 開始日
      schema:
        type: string
        format: date
    To:
      name: to
      in: query
      description: 終了日
      schema:
        type: string
        format: date
    AccountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    CategoryId:
      name: categoryId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    MasterCategoryId:
      name: masterCategoryId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    TransactionId:
      name: transactionId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    BudgetId:
      name: budgetId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    SuggestionId:
      name: suggestionId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  schemas:
    # エラーレスポンス
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object

    # ページネーション
    Pagination:
      type: object
      properties:
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        total_pages:
          type: integer

    # 基本的なエンティティ
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        auth0_user_id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Account:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum: [checking, savings, investment, credit_card, loan]
        initial_balance:
          type: integer
        current_balance:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AccountMovement:
      type: object
      properties:
        id:
          type: string
          format: uuid
        account_id:
          type: string
          format: uuid
        amount:
          type: integer
        occurred_at:
          type: string
          format: date-time
        note:
          type: string

    CategoryMaster:
      type: object
      properties:
        id:
          type: string
          format: uuid
        parent_id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        sort_order:
          type: integer
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        master_id:
          type: string
          format: uuid
          nullable: true
        parent_id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        is_custom:
          type: boolean
        sort_order:
          type: integer
        is_active:
          type: boolean
        icon:
          type: string
          description: カテゴリアイコンのID/名前
          example: 'shopping-cart'
        color:
          type: string
          description: カテゴリの色（HEX形式）
          pattern: '^#[0-9A-Fa-f]{6}$'
          example: '#3B82F6'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [income, expense]
        amount:
          type: integer
        transaction_date:
          type: string
          format: date
        category:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time


    Budget:
      type: object
      properties:
        id:
          type: string
          format: uuid
        category:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        amount:
          type: integer
        month:
          type: string
          pattern: '^\d{4}-\d{2}$'
        spent:
          type: integer
        remaining:
          type: integer
        percentage:
          type: number
          format: float
        created_at:
          type: string
          format: date-time

    AssetSnapshot:
      type: object
      properties:
        id:
          type: string
          format: uuid
        snapshot_date:
          type: string
          format: date
        total_assets:
          type: integer
        change_from_previous:
          type: integer
        change_percentage:
          type: number
          format: float
        breakdown:
          type: array
          items:
            type: object
            properties:
              account_id:
                type: string
                format: uuid
              account_name:
                type: string
              balance:
                type: integer
        created_at:
          type: string
          format: date-time

    NotificationSettings:
      type: object
      properties:
        monthly_report:
          type: object
          properties:
            enabled:
              type: boolean
            send_day:
              type: integer
              minimum: 1
              maximum: 31
            send_time:
              type: string
              pattern: '^\d{2}:\d{2}$'
            email:
              type: string
              format: email
        budget_exceeded_alert:
          type: object
          properties:
            enabled:
              type: boolean
            email:
              type: string
              format: email

    # リクエスト/レスポンススキーマ
    Auth0CallbackRequest:
      type: object
      required:
        - auth0_user_id
        - email
        - email_verified
      properties:
        auth0_user_id:
          type: string
        email:
          type: string
          format: email
        email_verified:
          type: boolean
        name:
          type: string
        picture:
          type: string
        provider:
          type: string
        google_id:
          type: string

    Auth0CallbackResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        is_new_user:
          type: boolean

    UserSyncResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'

    UserUpdateRequest:
      type: object
      properties:
        email:
          type: string
          format: email


    AccountCreateRequest:
      type: object
      required:
        - name
        - type
        - initial_balance
      properties:
        name:
          type: string
        type:
          type: string
          enum: [checking, savings, investment, credit_card, loan]
        initial_balance:
          type: integer

    AccountUpdateRequest:
      type: object
      properties:
        name:
          type: string

    AccountListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        pagination:
          $ref: '#/components/schemas/Pagination'

    AccountMovementCreateRequest:
      type: object
      required:
        - amount
      properties:
        amount:
          type: integer
        note:
          type: string

    AccountMovementListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountMovement'
        pagination:
          $ref: '#/components/schemas/Pagination'

    CategoryMasterListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CategoryMaster'

    CategoryMasterCreateRequest:
      type: object
      required:
        - name
        - sort_order
      properties:
        name:
          type: string
        parent_id:
          type: string
          format: uuid
          nullable: true
        sort_order:
          type: integer

    CategoryMasterUpdateRequest:
      type: object
      properties:
        name:
          type: string
        sort_order:
          type: integer

    CategoryMasterDeleteResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        updated_at:
          type: string
          format: date-time


    CategoryListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'


    CategoryUpdateRequest:
      type: object
      properties:
        name:
          type: string
        sort_order:
          type: integer

    CategoryDeleteResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        is_active:
          type: boolean
        updated_at:
          type: string
          format: date-time

    TransactionCreateRequest:
      type: object
      required:
        - type
        - amount
        - transaction_date
        - category_id
      properties:
        type:
          type: string
          enum: [income, expense]
        amount:
          type: integer
        transaction_date:
          type: string
          format: date
        category_id:
          type: string
          format: uuid
        description:
          type: string

    TransactionUpdateRequest:
      type: object
      properties:
        amount:
          type: integer
        description:
          type: string

    TransactionListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        pagination:
          $ref: '#/components/schemas/Pagination'
        summary:
          type: object
          properties:
            total_income:
              type: integer
            total_expense:
              type: integer
            net:
              type: integer



    BudgetCreateRequest:
      type: object
      required:
        - budgets
      properties:
        budgets:
          type: array
          items:
            type: object
            required:
              - category_id
              - amount
              - month
            properties:
              category_id:
                type: string
                format: uuid
              amount:
                type: integer
              month:
                type: string
                pattern: '^\d{4}-\d{2}$'

    BudgetCreateResponse:
      type: object
      properties:
        created:
          type: integer
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/Budget'

    BudgetUpdateRequest:
      type: object
      properties:
        amount:
          type: integer

    BudgetListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        summary:
          type: object
          properties:
            total_budget:
              type: integer
            total_spent:
              type: integer
            total_remaining:
              type: integer
            percentage:
              type: number
              format: float

    CurrentBudgetResponse:
      type: object
      properties:
        month:
          type: string
        current_date:
          type: string
          format: date
        days_in_month:
          type: integer
        days_elapsed:
          type: integer
        days_remaining:
          type: integer
        data:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Budget'
              - type: object
                properties:
                  daily_average_budget:
                    type: number
                    format: float
                  daily_average_spent:
                    type: number
                    format: float
                  projected_month_end:
                    type: integer
                  status:
                    type: string
                    enum: [on_track, completed, over_budget, under_spent, at_risk, over_projected]
        summary:
          type: object
          properties:
            total_budget:
              type: integer
            total_spent:
              type: integer
            total_remaining:
              type: integer
            percentage:
              type: number
              format: float
            daily_average_budget:
              type: number
              format: float
            daily_average_spent:
              type: number
              format: float
            projected_month_end:
              type: integer
            status:
              type: string
        alerts:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              category:
                type: string
              message:
                type: string
        recommendations:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              category:
                type: string
              message:
                type: string


    BudgetSuggestionResponse:
      type: object
      properties:
        month:
          type: string
        suggestions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              category:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
              suggested_amount:
                type: integer
              current_budget:
                type: integer
              last_month_actual:
                type: integer
              three_month_average:
                type: integer
              reason:
                type: string
              confidence:
                type: number
                format: float
              status:
                type: string
                enum: [pending, accepted, rejected]
        summary:
          type: object
          properties:
            total_suggested:
              type: integer
            total_current:
              type: integer
            potential_savings:
              type: integer

    BudgetSuggestionGenerateRequest:
      type: object
      required:
        - month
      properties:
        month:
          type: string
          pattern: '^\d{4}-\d{2}$'
        optimization_type:
          type: string
          enum: [conservative, balanced, aggressive]
          default: balanced

    BudgetSuggestionGenerateResponse:
      type: object
      properties:
        month:
          type: string
        suggestions:
          type: array
          items:
            type: object
        created_at:
          type: string
          format: date-time

    BudgetSuggestionStatusResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum: [accepted, rejected]
        budget_id:
          type: string
          format: uuid
          nullable: true
        updated_at:
          type: string
          format: date-time

    AssetSnapshotListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssetSnapshot'
        pagination:
          $ref: '#/components/schemas/Pagination'

    AssetForecastResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        horizon_months:
          type: integer
        forecast_date:
          type: string
          format: date
        current_assets:
          type: integer
        predicted_assets:
          type: integer
        growth_rate:
          type: number
          format: float
        method:
          type: string
          enum: [linear_regression, moving_average, monte_carlo, ml_based]
        confidence_interval:
          type: object
          properties:
            lower:
              type: integer
            upper:
              type: integer
        assumptions:
          type: object
          properties:
            monthly_income:
              type: integer
            monthly_expense:
              type: integer
            savings_rate:
              type: number
              format: float
            investment_return:
              type: number
              format: float
            inflation_rate:
              type: number
              format: float
        monthly_forecast:
          type: array
          items:
            type: object
            properties:
              month:
                type: string
              predicted_assets:
                type: integer
        created_at:
          type: string
          format: date-time

    AssetForecastCreateRequest:
      type: object
      required:
        - horizon_months
      properties:
        horizon_months:
          type: integer
          minimum: 1
          maximum: 60
        scenario:
          type: string
          enum: [pessimistic, realistic, optimistic]
          default: realistic
        assumptions:
          type: object
          properties:
            monthly_income:
              type: integer
            monthly_expense:
              type: integer
            major_expenses:
              type: array
              items:
                type: object
                properties:
                  month:
                    type: string
                  amount:
                    type: integer
                  description:
                    type: string

    AssetForecastCreateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        horizon_months:
          type: integer
        forecast_date:
          type: string
          format: date
        predicted_assets:
          type: integer
        method:
          type: string
        created_at:
          type: string
          format: date-time


    ReportEmailRequest:
      type: object
      required:
        - type
        - year
        - month
        - recipient_email
      properties:
        type:
          type: string
          enum: [monthly, yearly]
        year:
          type: integer
        month:
          type: integer
        recipient_email:
          type: string
          format: email

    ReportEmailResponse:
      type: object
      properties:
        message:
          type: string
        sent_at:
          type: string
          format: date-time

    NotificationSettingsUpdateRequest:
      type: object
      properties:
        monthly_report:
          type: object
          properties:
            enabled:
              type: boolean
            send_day:
              type: integer
              minimum: 1
              maximum: 31
            send_time:
              type: string
              pattern: '^\d{2}:\d{2}$'
        budget_exceeded_alert:
          type: object
          properties:
            enabled:
              type: boolean

    NotificationSettingsUpdateResponse:
      type: object
      properties:
        message:
          type: string
        updated_at:
          type: string
          format: date-time



    # 新しいレスポンススキーマ
    MonthlySummaryResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            year:
              type: integer
            month:
              type: integer
            granularity:
              type: string
              enum: [daily, weekly, monthly]
        summary:
          type: object
          properties:
            total_income:
              type: integer
            total_expense:
              type: integer
            net_income:
              type: integer
            transaction_count:
              type: integer
            average_daily_expense:
              type: number
              format: float
        trends:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              income:
                type: integer
              expense:
                type: integer
              net:
                type: integer
        category_breakdown:
          type: array
          items:
            type: object
            properties:
              category:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  icon:
                    type: string
                  color:
                    type: string
              amount:
                type: integer
              percentage:
                type: number
                format: float
              transaction_count:
                type: integer
        comparison:
          type: object
          properties:
            previous_month:
              type: object
              properties:
                total_expense:
                  type: integer
                change_amount:
                  type: integer
                change_percentage:
                  type: number
                  format: float
          nullable: true

    TransactionSummaryResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        summary:
          type: object
          properties:
            total_income:
              type: integer
            total_expense:
              type: integer
            net_income:
              type: integer
            transaction_count:
              type: integer
        grouped_data:
          type: array
          items:
            type: object
            properties:
              group_key:
                type: string
                description: グループキー（カテゴリ名、日付等）
              group_type:
                type: string
                enum: [category, date, month]
              total_amount:
                type: integer
              transaction_count:
                type: integer
              details:
                type: object
                properties:
                  category_id:
                    type: string
                    format: uuid
                    nullable: true
                  category_name:
                    type: string
                    nullable: true

    TransactionMonthlySummaryResponse:
      type: object
      properties:
        year:
          type: integer
          description: 対象年
          example: 2024
        month:
          type: integer
          description: 対象月
          example: 2
        summary:
          type: object
          properties:
            total_income:
              type: integer
              description: 収入合計
              example: 250000
            total_expense:
              type: integer
              description: 支出合計
              example: 175000
            net_income:
              type: integer
              description: 純収入（収入-支出）
              example: 75000
        daily_average:
          type: object
          properties:
            income:
              type: integer
              description: 日次平均収入
              example: 8929
            expense:
              type: integer
              description: 日次平均支出
              example: 6250
        comparison:
          type: object
          properties:
            previous_month:
              type: object
              properties:
                income_change:
                  type: integer
                  description: 前月からの収入変化額
                  example: 0
                expense_change:
                  type: integer
                  description: 前月からの支出変化額
                  example: -5000
                expense_change_percentage:
                  type: number
                  format: float
                  description: 前月からの支出変化率（%）
                  example: -2.8
                  icon:
                    type: string
                    nullable: true
                  color:
                    type: string
                    nullable: true

tags:
  - name: Authentication
    description: 認証関連のAPI
  - name: Users
    description: ユーザー管理API
  - name: Accounts
    description: 口座管理API
  - name: Categories
    description: カテゴリ管理API
  - name: Transactions
    description: 取引管理API
  - name: Budgets
    description: 予算管理API
  - name: Budget Suggestions
    description: AI予算提案API
  - name: Assets
    description: 資産管理API
  - name: Asset Forecasts
    description: 資産予測API
  - name: Reports
    description: レポートAPI
  - name: Summary
    description: サマリー情報API
  - name: Notifications
    description: 通知設定API
